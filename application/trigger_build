banner Starting Labrinth...

export AWS_DEFAULT_REGION=us-east-1
export AWS_DEFAULT_OUTPUT=json

TF_DIR="./infra"
DOCKER="./docker"


ECR_REPO="labyrinth"
CLUSTER=Lab-cluser
SERVICE=lab-api

eval $(aws ecr get-login --no-include-email)

cd ${DOCKER}

ECR_URI=$(aws ecr describe-repositories \
  --repository-names env.ECR_REPO \
 | jq .repositories[].repositoryUri \
 | tr -d '"')

docker images ls
docker build . -t "${ECR_URI}:${BUILD_NUMBER}"
docker push ${ECR_URI}:${BUILD_NUMBER}





#Register the task definition in the repository
aws ecs register-task-definition \
  --family ${env.SERVICE} \
  --cli-input-json file://${WORKSPACE}/${NAME}-v_${BUILD_NUMBER}.json

SERVICES=$(aws ecs describe-services \
  --services ${env.SERVICE} \
  --cluster ${env.CLUSTER} \
  | jq .failures[])

REVISION=$(aws ecs describe-task-definition \
  --task-definition ${NAME} \
  | jq .taskDefinition.revision)

if [ "$SERVICES" == " ]; then
  echo "entered existing service"

  DESIRED_COUNT=$(aws ecs describe-services \
    --services ${env.SERVICE} \
    --cluster ${env.CLUSTER} \
    | jq .services[].desiredCount)

  if [ ${DESIRED_COUNT} = "0" ]; then
    DESIRED_COUNT="1"
  fi
  aws ecs update-service \
    --cluster ${env.CLUSTER} --service ${env.SERVICE} --task-definition ${env.SERVICE}:${env.BUILD_NUMBER} --desired-count ${DESIRED_COUNT}
  else
    echo "entered new service"
    aws ecs create-service --service-name ${env.SERVICE} --desired-count 1 --task-definition ${env.SERVICE} --cluster ${env.CLUSTER}
fi
